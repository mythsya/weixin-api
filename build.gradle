/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'xgx' at '4/1/16 7:51 PM' with Gradle 2.12
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven {
            url "http://repo.maven.apache.org/maven2"      
        }
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE'
    }
}

ext {
    profile = defaultProperty('profile', 'development')
}

def defaultProperty(propertyName, defaultValue) {
    return hasProperty(propertyName) ? project[propertyName] : defaultValue
}

def loadGroovyConfig(){
    def configFile = file('config.groovy')
    new ConfigSlurper(profile).parse(configFile.toURL()).toProperties()
}

task replace(type: Sync) {
    def configHome = "${project.rootDir}/config"

    from(configHome) {
        include '**/*.properties'
        include '**/*.xml'
        filter org.apache.tools.ant.filters.ReplaceTokens, 
        tokens: loadGroovyConfig()
    }
    into "${buildDir}/resources/main"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    //apply plugin: 'checkstyle'
    //checkstyle {
    //    toolVersion="6.17"
    //    configFile=rootProject.file('config/checkstyle/googleCheckstyleCfg.xml')
    //}

    apply plugin: 'findbugs'
    findbugs {
        toolVersion="3.0.1"
        ignoreFailures=true
        findbugsTest.enabled=false
    }
    tasks.withType(FindBugs) {
        reports {
            xml.enabled=false
            html.enabled=true
        }
    }

    apply plugin: 'pmd'
    pmd {
        toolVersion="5.4.1"
        ignoreFailures=true
        pmdTest.enabled=false
    }
    tasks.withType(Pmd) {
        reports {
            xml.enabled=false
            html.enabled=true
        }
    }


    group = 'com.vidoshow.vido'
    version = '1.0-SNAPSHOT'
    
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava {
        options.fork = true
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        options.bootClasspath = "$System.env.JAVA_HOME/jre/lib/rt.jar"
        options.bootClasspath += "$File.pathSeparator$System.env.JAVA_HOME/jre/lib/jce.jar"
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    // In this section you declare where to find the dependencies of your project
    repositories {
        // Use 'jcenter' for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
        mavenLocal()
        mavenCentral()
        maven {
            url "http://repo.maven.apache.org/maven2"      
        }
    }

    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:2.0.3.RELEASE'
        }
    }

}

subprojects {

    ext {
        wtpVersion = '2.0'
        jeeVersion = '6.0'
        guavaVersion = '19.0'
        junitVersion = '4.12'
        jerseyVersion = '2.17'

        hibernateVersion = '5.0.2.Final'
        jacksonVersion = '2.7.3'
        logbackVersion = '1.1.3'
        jcloverslf4jVersion = '1.7.12'
        hl7apiVersion = '2.2'
        camelVersion = '2.16.2'
        jadiraUsertypeVersion = '5.0.0.GA'
        jodatimeVersion = '2.9.2'
        oracleJdbcDriverVersion = '11.2.0.2'
        alibabaDruidVersion = '1.0.16'
        servletVersion = '1.1.1'
        servletApiVersion = '2.5'
        jspApiVersion = '2.0'

        commonsCollectionsVersion = '3.2.1'
        commonsLangVersion = '3.4'
        commonsIoVersion = '2.4'
        commonsCodecVersion = '1.10'
        commonsBeanutilsVersion = '1.9.2'
        httpClientVersion = '4.5.2'
    } 

    sourceSets {
        main {
            resources { 
                srcDir "config/application/spring/${profile}"
                srcDir "config/application/properties/${profile}"
            }
        } 
    }

    dependencies {
        compile(
            "com.google.guava:guava:${guavaVersion}"
        )
        testCompile(
            "junit:junit:${junitVersion}"
        )
    }

}

configure(subprojects.findAll {it.name.contains('war')}) {
    apply plugin: 'war'
}
